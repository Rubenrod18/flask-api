from flask_script import Manager
from peewee import *

from app import create_app
from app.models import *

app = create_app(os.getenv('FLASK_CONFIG', 'config.DevConfig'))
manager = Manager(app)

dbname = '%s.db' % os.getenv('DATABASE_NAME')
database = SqliteDatabase('my_app.db')

# This hook ensures that a connection is opened to handle any queries
# generated by the request.
@app.before_request
def _db_connect():
    database.connect()

# This hook ensures that the connection is closed when we've finished
# processing the request.
@app.teardown_request
def _db_close(exc):
    if not database.is_closed():
        database.close()

@app.after_request
def after_request(response):
    response.headers.add('Access-Control-Allow-Origin', '*')
    response.headers.add('Access-Control-Allow-Headers', 'Content-Type')
    response.headers.add('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE')
    response.headers.add('Cache-Control', 'no-cache')
    return response

if __name__ == '__main__':
    manager.run()
